#!/usr/bin/ruby
# share
# Tom Lazar & Charlie Morley

require 'thor'
require 'json'
require_relative 'contact.rb'
require_relative 'shareMail.rb'
require_relative 'config.rb'

# Main CLI for this entire project
class Share < Thor
    desc "list_contacts", "shows all contacts in your contact book."
    def list_contacts
        Contact.list
    end
    
    desc "list_active", "shows all contacts that are online."
    def list_active
        contacts = Contact.load
        contacts.each do |k,v|
            begin 
                config = JSON.parse(File.read(v['path'] + '/.config/config.json'))
                say k if config['status'] == 'online'
            rescue Exception => e
                say "Cannot Open File for User #{k}"
            end
        end
    end
    
    desc "install", "create an alias to this program to the Directory you chose"
    option :hard, :type => :boolean, :default => false     
    def install        
        if options[:hard]
            system "rm ~/bin/share"
            system "rm -rf ~/Inbox/"
        end
        system "ln -s $PWD/share ~/bin/"
        system "mkdir ~/Inbox/"
        system "mkdir ~/Inbox/.friends"
        system "mkdir ~/Inbox/.config"
        system "touch ~/Inbox/.config/contacts.json"
        createConfig({ :default => true, :hard => options[:hard] }, {})
    end
    
    desc "add_contact [NAME] [EMAIL ADDRESS] [INBOX PATH]", "adds the contact NAME, to corespond with the [VALUE] addres in your book"
    def add_contact name, email, path
        args = {:email => email, :path => File.expand_path(path) }
        Contact.add_contact name, args, true
    end
    
    desc "send [CONTACT] [FILE]", "Sends the FILE to the inbox of the CONTACT entered"
    def send contact, file
    end
    
    desc "recieve [FILE]", "Moves the FILE from your inbox to the local folder you are in"
    def recieve file
    end
    
    desc "list_files", "Lists all files in your inbox"
    def list_files
    end
    
    desc "email [ADDRESS]", "Emails the FILE, to the ADDRESS. If address has a entry in contacts it is changed to that."
    option :message, :type => :string, :aliases => "-m"
    option :subject, :type => :string, :default => "Auto email with atachment", :aliases => "-s"
    option :file,    :aliases => '-f'
    option :test,    :type => :boolean, :default => false, :banner=>'To Test or Not to Test'
    option :verbose, :type => :boolean, :default => true
    def email address
        
        body = "AUTOMATED Email from #{ENV['USER']}." 
        body += options[:message] if options[:message]    
        
        # new_subject  = args[:subject] ? args[:subject] : "Auto Email from #{ENV['USER']}"
        
        args = { :recipiant => address.split(',').map {|i| Contact.lookup_email i},
                 :subject   => options[:subject],
                 :message   => body,
                 :file      => options[:file] }
        
        if options[:verbose]
            output = []
            output << "Recipaint: #{args[:recipiant]}"
            output << "Subject:   #{args[:subject]}"
            output << "Message:   #{body}"
            output << "File:      #{args[:file]}" if args[:file]
            say output.join "\n"
        end
        
        ShareMail.send args unless options[:test]
    end
end

Share.start(ARGV)

